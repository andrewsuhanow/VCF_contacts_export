{"remainingRequest":"C:\\Open Server 5.3.0\\OSPanel\\domains\\laravel-vue-cli-vuetify\\resources\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Open Server 5.3.0\\OSPanel\\domains\\laravel-vue-cli-vuetify\\resources\\frontend\\src\\components\\LoadFilePage.vue?vue&type=style&index=0&id=290524e1&scoped=true&lang=css&","dependencies":[{"path":"C:\\Open Server 5.3.0\\OSPanel\\domains\\laravel-vue-cli-vuetify\\resources\\frontend\\src\\components\\LoadFilePage.vue","mtime":1588863384578},{"path":"C:\\Open Server 5.3.0\\OSPanel\\domains\\laravel-vue-cli-vuetify\\resources\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Open Server 5.3.0\\OSPanel\\domains\\laravel-vue-cli-vuetify\\resources\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Open Server 5.3.0\\OSPanel\\domains\\laravel-vue-cli-vuetify\\resources\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Open Server 5.3.0\\OSPanel\\domains\\laravel-vue-cli-vuetify\\resources\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Open Server 5.3.0\\OSPanel\\domains\\laravel-vue-cli-vuetify\\resources\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Open Server 5.3.0\\OSPanel\\domains\\laravel-vue-cli-vuetify\\resources\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oaWRkZW5DbHMgewogICAgLyp2aXNpYmlsaXR5OiBoaWRkZW47Ki8KICAgIGRpc3BsYXk6IG5vbmU7Cn0KCg=="},{"version":3,"sources":["LoadFilePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqaA;AACA;AACA;AACA","file":"LoadFilePage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-app>\n      <div class=\"LoadFilePage\">\n<!--        <h1>BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBbb</h1>-->\n\n<!--          // загрузка файла-->\n\n<!--            // Поиск текста-->\n<!--          <v-text-field-->\n<!--              label=\"Find\"-->\n<!--              v-model=\"findingText\"-->\n<!--              outlined-->\n<!--              dense-->\n<!--          ></v-text-field>-->\n\n          <v-file-input\n              accept=\".-vcf-\"\n              label=\"Click here to select a .txt file\"\n              outlined\n              v-model=\"chosenFile\"\n          >\n          </v-file-input>\n\n<!--          // кноки 'читать файл',  'сохранить'-->\n          <v-row >\n              <v-col cols=\"2\">\n                <v-btn right @click=\"importTxt\">Read File</v-btn>\n              </v-col>\n              <v-col cols=\"2\">\n                <v-btn right @click=\"saveToServe\">Save File</v-btn>\n              </v-col>\n\n          </v-row >\n\n\n              <v-card-text v-if=\"data=='No File Chosen'\"><p>{{data}}</p></v-card-text>\n\n<!--                  <v-card-text v-for=\"(item, index) in mString\" :key=\"index\"><p>{{index}}: {{mString[index]}}</p></v-card-text>-->\n\n\n<!--          -->\n<!--          -->\n          <div v-if=\"data!='No File Chosen'\">\n              <v-container  v-for=\"(item, index) in mString\" :key=\"index\" :class=\"'cardNumClass'+index\"  >\n\n<!--                  //  V-APP КОМПОНЕНТА   --  СДЕЛАННО НЕКОРPЕКТНО-->\n                    <LoadFilePageCard :fileData=\"item\"\n                                      :index=\"index\"\n                                      :isDisabledCardIndex=\"isDisabledCardIndex\"\n                                      :isEditableNow=\"isEditableNow\"\n                                      @btnDel=\"btnDel\"\n                                      @EditData=\"EditData\"\n                                      @isEdit=\"isEdit\"\n                                      :findingText=\"findingText\"\n                                      @setHideCardIndex=\"setHideCardIndex\"\n                    ></LoadFilePageCard>\n<!--                  :isFindedCard=\"isFindedCard\"-->\n\n              </v-container>\n\n          </div>\n\n      </div>\n\n\n    </v-app>\n</template>\n\n<script>\n\nimport axios from \"axios\";\n\nimport LoadFilePageCard from './LoadFilePageCard';\n\nexport default {\n  name: 'LoadFilePage',\n\n\n    components: {\n        LoadFilePageCard,\n    },\n\n    props: ['findingText', 'fButtonAddCardIsVisible'],\n    data() {\n        return {\n            chosenFile: null,\n            data: null,\n            mStringTimer: [\n                // {\n                //     IDbd: -1\n                //     FN: 'xx2',\n                //     TEL: '+00000000002',\n                //     EMAIL: 'xxx@xx2.com',\n                // }\n            ],\n            mString: [\n                // {\n                //     ID: -1\n                //     FN: 'xx2',\n                //     TEL: '+00000000002',\n                //     EMAIL: 'xxx@xx2.com',\n                // }\n            ],\n            mStringEl: {\n                FN: 'xx2',\n                TEL: '+00000000002',\n                EMAIL: 'xxx@xx2.com',\n            },\n            isDisabledCardIndex: null,\n            isEditableNow: false,\n            //findingText: ' ',\n            //isFindedCard: false,\n\n        }\n    },\n\n    methods: {\n\n\n        // удаление из массива из дочернего компонента\n        btnDel(i){\n            axios.post(\"http://laravel-vue-cli-vuetify/api/DeleteCard\" , {id: this.mString[i].ID})\n                .then(res => {\n                    console.log(res.data.status)\n                    //console.log(res.data.card)\n\n                    this.mString.splice(i, 1)\n                    //console.log(this.mString);\n\n\n                    // стираем массив с данными и загружаем его наново\n\n                    // this.mString = [];\n                    // axios.post(\"http://laravel-vue-cli-vuetify/api/loadTimeDataFromBD\" , {})\n                    //     .then(res => {\n                    //         console.log(res.data.status)\n                    //\n                    //         //console.log(res.data.file)\n                    //         for(let i =0; i< res.data.DataCards.length; i++){\n                    //             this.mString.push({\n                    //                 ID: res.data.DataCards[i].id,\n                    //                 FN: res.data.DataCards[i].name,\n                    //                 TEL: res.data.DataCards[i].telephone,\n                    //                 EMAIL: res.data.DataCards[i].email\n                    //             });\n                    //             //this.mString = res.data.DataCards\n                    //\n                    //         }\n                    //         console.log(i+1)\n                    //         // скролинг к месту открытой карточки\n                    //         // let x = document.querySelector(\".cardNumClass\"+(i+1)).offsetLeft;\n                    //         // let y = document.querySelector(\".cardNumClass\"+(i+1)).offsetTop;\n                    //         // window.scrollTo(x,y)\n                    //     });\n\n                });\n        },\n\n        // переход на станицу редактирования данных\n        isEdit(i){\n            this.isDisabledCardIndex = i;\n            this.isEditableNow = true;\n        },\n\n        // замена значения в массиве из дочернего компонента\n        EditData(i,FN,TEL,EMAIL){\n            this.isDisabledCardIndex = null;\n            this.isEditableNow = false;\n            this.mString[i].FN = FN;\n            this.mString[i].TEL = TEL;\n            this.mString[i].EMAIL = EMAIL;\n\n            axios.post(\"http://laravel-vue-cli-vuetify/api/UpdateCard\" , {\n\n                card: this.mString[i],\n            })\n                .then(res => {\n                    console.log(res.data.status)\n                    //console.log(res.data.fileData)\n                });\n        } ,\n\n        // сохранение на сервер  (данные с -1 удаляем а с 0 сохраняем)\n        saveToServe(){\n            console.log(\"--------save--------\");\n            //console.log( this.mString[0].FN);\n\n            axios.post(\"http://laravel-vue-cli-vuetify/api/saveDataFromTimeData\" , {})\n                .then(res => {\n                    console.log(res.data.status)\n\n                    this.mString = [];\n                    console.log('num:  ' + this.mString.length)\n                });\n        },\n\n        // делаем видимым-невидимым при поиске  (всем отрисованым элементам 'с классом' добавляем видимости или не...)\n        setHideCardIndex(val, cardNumClass){\n            if(cardNumClass== 'show'){\n                document.querySelector(\".cardNumClass\"+val).classList.remove('hiddenCls');\n            }\n            else if(cardNumClass == 'hide'){\n                document.querySelector(\".cardNumClass\"+val).classList.add('hiddenCls');\n            }\n            else if(cardNumClass == 'showAll'){\n                this.mString.forEach(function(el, index){\n                    document.querySelector(\".cardNumClass\"+index).classList.remove('hiddenCls');\n                });\n            }\n\n        },\n\n\n        // чтение из файла\n        importTxt() {\n\n            if (!this.chosenFile) {\n                this.data = \"No File Chosen\"\n            }else {\n                var reader = new FileReader();\n                reader.readAsText(this.chosenFile);\n                reader.onload = () => {\n                    this.data = reader.result;\n\n\n                    //   обработка файла\n                    let mStringTime = this.data.split('\\n');      //  Cut  Text\n\n                    for (let i = 0; i <= mStringTime.length - 1; i++) {\n\n                        //this.sss = mStringTime;\n\n                        // 111111111111111111111111111111111111111111\n                        let str = mStringTime[i].indexOf('BEGIN:VCARD');\n                        if (str != -1) {\n                            this.mStringEl.FN = 'none';\n                            this.mStringEl.TEL = 'none';\n                            this.mStringEl.EMAIL = 'none';\n                        }\n\n                        // 22222222222222222222222222222222222222222\n                        let strNum = mStringTime[i].indexOf('FN:');\n                        if (strNum != -1) {\n                            let strOrigin = mStringTime[i].trim();\n                            strNum = strOrigin.indexOf(':');\n                            let strResult = strOrigin.slice(strNum + 1);\n                            if(!strResult==' '){\n                                this.mStringEl['FN'] = strResult;\n                            }\n                            // console.log(str+\"  ********* \"+ strResult)\n                        }\n\n                        // 33333333333333333333333333333333333333333\n                        strNum = mStringTime[i].indexOf('TEL;');\n                        if (strNum != -1) {\n                            let strOrigin = mStringTime[i].trim();\n                            strNum = strOrigin.indexOf(':');\n                            let strResult = strOrigin.slice(strNum + 1);\n                            if(!strResult==' ') {\n                                this.mStringEl['TEL'] = strResult;\n                            }\n                            //console.log(str+\"  ********* \"+ strResult)\n                        }\n\n                        // 4444444444444444444444444444444444444444\n                        strNum = mStringTime[i].indexOf('EMAIL');\n                        if (strNum != -1) {\n                            let strOrigin = mStringTime[i].trim();\n                            strNum = strOrigin.indexOf(':');\n                            let strResult = strOrigin.slice(strNum + 1);\n                            if(!strResult==' ') {\n                                this.mStringEl['EMAIL'] = strResult;\n                            }\n                            //console.log(str+\"  ********* \"+ strResult)\n                        }\n\n                        // 5555555555555555555555555555555555555555\n                        strNum = mStringTime[i].indexOf('END:VCARD');\n                        if (strNum != -1) {\n\n                            this.mStringTimer.push({\n                                FN: this.mStringEl.FN,\n                                TEL: this.mStringEl.TEL,\n                                EMAIL: this.mStringEl.EMAIL\n                            });\n\n                        }\n                    }\n                     //console.log(\"uuuuuuuu\")\n\n                    // Сортировка по алфавиту имени 'FN'\n                    this.mStringTimer.sort(function(a,b){\n                        let nameA=a.FN.toLowerCase();\n                        let nameB=b.FN.toLowerCase();\n                        if (nameA < nameB) return -1;\n                        if (nameA > nameB)  return 1;\n                        return 0\n                    });\n\n                    //--------------------------------\n\n\n                    // очищаем баду данных перед открытием нового файла\n\n                    axios.post(\"http://laravel-vue-cli-vuetify/api/DeleteTimeData\" , {})\n                        .then(res => {\n                            console.log(res.data.status)\n\n                            // отправляю временный массив на сервер\n                            axios.post(\"http://laravel-vue-cli-vuetify/api/saveTimeData\" , {fileData: this.mStringTimer})\n                                .then(res => {\n                                    console.log(res.data.status)\n                                    //console.log(res.data.fileData)\n\n\n                                    // получаю с сервера данные о временных картах для отображения\n\n                                    this.mStringTimer=[];\n                                    this.mString=[];\n                                    axios.post(\"http://laravel-vue-cli-vuetify/api/loadDataFromBD\" , {isTime: -1})\n                                        .then(res => {\n                                            console.log(res.data.status)\n\n                                            //console.log(res.data.file)\n                                            for(let i =0; i< res.data.DataCards.length; i++){\n                                                this.mString.push({\n                                                    ID: res.data.DataCards[i].id,\n                                                    FN: res.data.DataCards[i].name,\n                                                    TEL: res.data.DataCards[i].telephone,\n                                                    EMAIL: res.data.DataCards[i].email\n                                                });\n                                                //this.mString = res.data.DataCards\n\n                                            }\n                                            //console.log(this.mString)\n                                        });\n                                });\n                        });\n\n\n                }\n            }\n\n\n\n\n        } // importTxt()\n    }, // methods:\n\n\n\n    mounted: function() {\n        console.log(\"--------mounted1111--------\");\n        // axios.post(\"http://laravel-vue-cli-vuetify/api/1\" , {})\n        //     .then(res => {\n        //         console.log(res.data.status)\n        //         console.log(res.data.file)\n        //     });\n\n\n        //// делаем кнопку добавления карт невидимой\n        this.$emit('fButtonAddCardIsVisible', 0)\n\n        // очистка временных значений с базы\n        if(this.$route.params.id == undefined){\n            axios.post(\"http://laravel-vue-cli-vuetify/api/DeleteTimeData\" , {})\n                .then(res => {\n                    console.log(res.data.status)\n                    //console.log('зззззззззззз-зззззззззззззззз-ppppppppppp')\n                });\n        }else {\n            // испльзуется если ввесть 'path/:id' ищет в базе данные с индексом -1 и если они есть\n            // открывает окно редактирования\n            axios.post(\"http://laravel-vue-cli-vuetify/api/loadDataFromBD\", {isTime: -1})\n                .then(res => {\n                    console.log(res.data.status)\n\n                    //console.log(res.data.file)\n                    for (let i = 0; i < res.data.DataCards.length; i++) {\n                        this.mString.push({\n                            ID: res.data.DataCards[i].id,\n                            FN: res.data.DataCards[i].name,\n                            TEL: res.data.DataCards[i].telephone,\n                            EMAIL: res.data.DataCards[i].email\n                        });\n                        //this.mString = res.data.DataCards\n\n                    }\n                    //console.log(this.mString)\n\n\n                    // если в адресной строке неправильные данные\n                    if (this.$route.params.id != undefined && (this.mString.length == 0 || this.$route.params.id > this.mString.length)) {\n\n                        this.$router.push({name: 'LoadFilePage'})\n                    } else if (this.$route.params.id != undefined && this.mString.length > 0) {\n                        //this.$emit('isEdit', this.$route.params.id)\n                        this.isDisabledCardIndex = this.$route.params.id;\n                        this.isEditableNow = true;\n                        this.$router.push({name: 'LoadFilePageCardEdit', params: {id: this.$route.params.id}})\n                    }\n                });\n        }\n\n    },\n\n    updated: function() {\n        console.log(\"---------updated111----------\");\n\n    },\n\n    destroyed: function() {\n        console.log(\"---------destroyed111----------\");\n\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n    .hiddenCls {\n        /*visibility: hidden;*/\n        display: none;\n    }\n\n</style>\n"]}]}